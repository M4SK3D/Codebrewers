{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","prefs","login","roll","loginError","name","admin","getUsers","a","async","axios","get","res","console","log","data","setState","post","handleChange","event","preventDefault","target","value","submitAction","length","bools","this","map","e","i","key","cid","sname","cname","prefno","Object","keys","index","toUpperCase","style","paddingLeft","color","type","onChange","onClick","src","fontSize","logoutFunction","marginLeft","width","display","id","renderHeader","renderTableData","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0ef18d8d.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport './mystyle.css';\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tprefs: [],\r\n\t\tlogin:0,\r\n\t\troll:'',\r\n\t\tloginError:\"\",\r\n\t\tname:\"\",\r\n\t\tadmin:0\r\n\t};\r\n\t\r\n\tgetUsers = async() => {\r\n\t\tif(this.state.admin === 1) {\r\n\t\t\tlet res = await axios.get(\"https://kxt4vjniid.execute-api.us-east-1.amazonaws.com/prod/adminfetch\");\r\n\t\t\tconsole.log(\"Fetched\");\r\n\t\t\tlet { data } = res;\r\n\t\t\tthis.setState({ prefs: data });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet res = await axios.post(\"https://kxt4vjniid.execute-api.us-east-1.amazonaws.com/prod/fetch\",{roll:this.state.roll});\r\n\t\t\tconsole.log(\"Fetched\");\r\n\t\t\tlet { data } = res;\r\n\t\t\tthis.setState({ prefs: data });\r\n\t\t}\r\n\t};\r\n\r\n\trenderTableData() {\r\n\t\treturn this.state.prefs.map((e,i) => {\r\n\t\t\tif(this.state.admin === 1) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={e.cid}>\r\n\t\t\t\t\t\t\t<td>{e.sname}</td>\r\n\t\t\t\t\t\t\t<td>{e.cid}</td>\r\n\t\t\t\t\t\t\t<td>{e.cname}</td>\r\n\t\t\t\t\t\t\t<td>{e.prefno}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<tr key={e.cid}>\r\n\t\t\t\t\t\t<td>{e.cid}</td>\r\n\t\t\t\t\t\t<td>{e.cname}</td>\r\n\t\t\t\t\t\t<td>{e.prefno}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t});\r\n\t}\r\n\t\r\n\trenderHeader() {\r\n      let header = Object.keys(this.state.prefs[0])\r\n      return header.map((key, index) => {\r\n         return <th key={index}>{key.toUpperCase()}</th>\r\n      })\r\n   }\r\n   \r\n    logoutFunction() {\r\n\t\tthis.setState({login:0, prefs: [], roll: \"\", loginError: \"\", name:\"\", admin:0});\r\n\t}\r\n\t\r\n\thandleChange = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({roll:event.target.value});\r\n\t\tconsole.log(this.state.roll);\r\n\t}\r\n\t\r\n\tsubmitAction = async() => {\r\n\t\tif(this.state.roll.length === 16 || this.state.roll.length === 5) {\r\n\t\t\tlet bools = await axios.post(\"https://kxt4vjniid.execute-api.us-east-1.amazonaws.com/prod/verify\",{roll:this.state.roll});\r\n\t\t\tconsole.log(bools);\r\n\t\t\tif(bools.data.name.length !== 0)\r\n\t\t\t{\r\n\t\t\t\tthis.setState({login:1});\r\n\t\t\t\tthis.setState({name:bools.data.name});\r\n\t\t\t\tif(this.state.name === 'Administrator')\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.setState({admin:1});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setState({loginError:\"Enter a valid Roll Number!\"});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.setState({loginError:\"Enter a valid Roll Number!\"});\r\n\t\t}\r\n\t}\t\t\r\n\t\r\n\trender() {\r\n\t\tif (this.state.login === 0)\r\n\t\t{\r\n\t\t\treturn (\r\n\t\t\t\t<container>\r\n\t\t\t\t\t<parahead>Login to Continue</parahead>\r\n\t\t\t\t\t<p style={{paddingLeft:\"25px\"}}>Roll Number: (CB.EN.U4XYZ17ABC format)</p>\r\n\t\t\t\t\t<p style={{paddingLeft:\"25px\"}}>Try: 17001 to 17005 and admin</p>\r\n\t\t\t\t\t<p style={{color:'Red'}}>{this.state.loginError}</p>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<input type=\"text\" onChange ={this.handleChange} />\r\n\t\t\t\t\t<br/><br/>&emsp;&emsp;&emsp;<button onClick = {() => this.submitAction()}>Login</button><br/><br/><br/><br/>\r\n\t\t\t\t</container>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse{\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t{this.state.prefs.length === 0 ? (\r\n\t\t\t<div>\r\n\t\t\t<topspace>\r\n\t\t\t\t<p>ELECTIVES MANAGEMENT SYSTEM</p>\r\n\t\t\t</topspace>\r\n\t\t\t<w3sidebar>\r\n\t\t\t<img src=\"https://www.advancedsec.com/wp-content/uploads/2018/11/profile-blank.png\" />\r\n\t\t\t<p style={{fontSize:\"30px\", paddingLeft:\"50px\" , color:\"white\"}}>Hello,</p><nametag>{this.state.name}</nametag>\r\n\t\t\t\t<navbar>\r\n\t\t\t    <logout onClick = {() => this.logoutFunction()}>Logout</logout>\r\n\t\t\t\t</navbar>\r\n\t\t\t</w3sidebar>\r\n\t\t\t<button style={{marginLeft:\"20%\" ,width:\"20%\" ,display:\"block\"}} onClick={() => this.getUsers()}>Click to load!</button>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t\t\t: (\r\n\t\t\t<div>\r\n\t\t\t<topspace>\r\n\t\t\t\t<p>ELECTIVES MANAGEMENT SYSTEM</p>\r\n\t\t\t</topspace>\r\n\t\t\t<w3sidebar>\r\n\t\t\t<img src=\"https://www.advancedsec.com/wp-content/uploads/2018/11/profile-blank.png\" />\r\n\t\t\t<p style={{fontSize:\"30px\", paddingLeft:\"50px\" , color:\"white\"}}>Hello,</p><nametag>{this.state.name}</nametag>\r\n\t\t\t\t<navbar>\r\n\t\t\t    <logout onClick = {() => this.logoutFunction()}>Logout</logout>\r\n\t\t\t\t</navbar>\r\n\t\t\t</w3sidebar>\r\n\t\t\t<table id='students' style={{marginLeft:\"20%\"}}>\r\n\t\t\t<tbody>\r\n\t\t\t<div style={{fontSize:\"20px\"}}>Your Preferences List:</div>\r\n\t\t\t<br/>\r\n\t\t\t<tr>{this.renderHeader()}</tr>\r\n\t\t\t\t{this.renderTableData()}\r\n\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<button style={{marginLeft:\"20%\" ,width:\"10%\" ,display:\"block\"}} onClick={() => this.getUsers()}>Reload</button>\r\n\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);}\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}